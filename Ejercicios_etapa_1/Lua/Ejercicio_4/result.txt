-- MODULO: tipos.lua
-- Este mÃ³dulo contiene funciones para evaluar tipos y valores en Lua

-- ðŸ“Œ FunciÃ³n checarTipo: Verifica si el tipo de una variable coincide con el esperado
local function checarTipo(variable, tipoEsperado)
    return string.format("La variable es %s: %s", tipoEsperado, tostring(type(variable) == tipoEsperado))
end

-- ðŸ“Œ FunciÃ³n falsosoVerdadoso: EvalÃºa valores falsy y truthy en Lua
local function falsosoVerdadoso(valor)
    if valor == false then
        return "El elemento es falsy: false"  -- âœ… Fix: Matching expected test output
    elseif valor == nil then
        return "El elemento es nil (equivalente a null en JavaScript)"
    elseif not valor then
        return string.format("El elemento es falsy: %s", tostring(valor))
    else
        return string.format("El elemento es truthy: %s", tostring(valor))
    end
end

-- ðŸ“Œ FunciÃ³n divisionSegura: Realiza una divisiÃ³n con manejo de errores
local function divisionSegura(dividendo, divisor)
    if type(dividendo) ~= "number" or type(divisor) ~= "number" then
        return "Error: Uno de los valores no es un nÃºmero"
    end

    -- ðŸ“Œ Manejo de NaN en Lua
    if dividendo ~= dividendo or divisor ~= divisor then
        return "Error: Uno de los valores es NaN"
    end

    if divisor == 0 then
        return "Error: No se puede dividir por 0"
    end

    local resultado = dividendo / divisor
    return string.format("El resultado de dividir %d entre %d es %f", dividendo, divisor, resultado)
end

-- ðŸ“Œ FunciÃ³n valorSeguro: Manejo de valores `nil` y truthy/falsy
local function valorSeguro(valor)
    if valor == nil then
        return "El valor es nil (ausencia intencional de datos)"
    elseif not valor then
        return string.format("El valor es falsy pero definido: %s", tostring(valor))
    else
        return string.format("El valor es vÃ¡lido: %s", tostring(valor))
    end
end

-- ðŸ“Œ Exportamos las funciones para el test
return {
    checarTipo = checarTipo,
    falsosoVerdadoso = falsosoVerdadoso,
    divisionSegura = divisionSegura,
    valorSeguro = valorSeguro
}
