import { transpile } from "https://deno.land/x/emit/mod.ts";

export async function injector(tsPath: string, htmlPath: string): Promise<void> {
    try {
        console.log("‚úÖ Iniciando la inyecci√≥n de TypeScript...");
        console.log(` Archivo TS: ${tsPath}`);
        console.log(` Archivo HTML: ${htmlPath}`);

        // Leer contenido del HTML directamente con `Deno.readTextFile()`
        const htmlContent = await Deno.readTextFile(htmlPath);
        console.log(" Contenido HTML le√≠do correctamente.");

        //console.log("üìå Verificando ruta TS antes de transpilar:", tsPath);
        const result = await transpile(tsPath);
        //console.log("üìå Resultado de transpile:", result);

        // Verificar si hay c√≥digo transpilado
        if (!result || result.size === 0) {
        throw new Error("‚ùå Error: No se gener√≥ c√≥digo transpilado.");
        }

        // Verificar qu√© clave tiene `result`
        console.log("üìå Claves disponibles en result:", Array.from(result.keys()));

        // Buscar la clave correcta en el Map
        const transpiledKey = Array.from(result.keys()).find(key => key.includes("hotreload.ts"));

        if (!transpiledKey) {
          throw new Error("‚ùå Error: No se encontr√≥ la clave correcta para el c√≥digo transpilado.");
        }

        // Extraer el c√≥digo JS generado
        const jsCode = result.get(transpiledKey);

        if (!jsCode) {
        throw new Error("‚ùå Error: C√≥digo transpilado est√° vac√≠o.");
        }
        console.log(" C√≥digo JS transpilado:", jsCode);

        //Comprobaci√≥n antes de modificar el HTML
        if (htmlContent.includes(`<script>${jsCode}</script>`)) {
        console.log("‚ö†Ô∏è El c√≥digo JS ya est√° inyectado, omitiendo actualizaci√≥n.");
        return;
        }

        // Insertar el c√≥digo JS en `index.html`
        const modifiedHtml = htmlContent.replace(
        "</body>",
        `<script>${jsCode}</script></body>`
        );
        console.log("‚úÖ C√≥digo JS inyectado en HTML correctamente.");

        // Guardar los cambios en `index.html`
        await Deno.writeTextFile(htmlPath, modifiedHtml);
        console.log("‚úÖ Archivo HTML actualizado con √©xito.");

    } catch (error) {
        console.error("‚ùå Error en injector:", error);
        return;
    }
}
