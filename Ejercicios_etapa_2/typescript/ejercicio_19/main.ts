/**
 * M√ìDULO 19: MODULARIZACI√ìN DEL SERVIDOR LOCAL (slightlyLate)
 *
 * üß† Concepto clave:
 * En proyectos reales, no escribimos un servidor desde cero cada vez. 
 * Usamos bibliotecas como **Express** (Node.js) o **Oak** (Deno) que encapsulan toda la l√≥gica de servidor
 * en funciones reutilizables y f√°ciles de mantener.

 * En este m√≥dulo, vas a **extraer tu servidor a un m√≥dulo reutilizable** que te servir√° para los siguientes ejercicios.

 * üéØ Objetivo:
 * Crear un m√≥dulo llamado `slightlyLate.ts` que pueda iniciar un servidor b√°sico y servir archivos HTML desde la carpeta `dist/`.

 * ‚úÖ Instrucciones:
 * 1. Crea un archivo llamado `slightlyLate.ts` en la carpeta ra√≠z de esta parte del curso (por ejemplo, en `Ejercicios_etapa_2/`)
 * 
 * 2. En este archivo, exporta una funci√≥n llamada `iniciarServidor`, que reciba un puerto como par√°metro:
 *    ```ts
 *    export function iniciarServidor(puerto: number = 3000) {
 *      Deno.serve({ port: puerto }, async (req) => {
 *        const url = new URL(req.url);
 *        const path = url.pathname === "/" ? "/index.html" : url.pathname;
 *        try {
 *          const archivo = await Deno.readTextFile(`dist${path}`);
 *          return new Response(archivo, {
 *            headers: { "Content-Type": "text/html" }
 *          });
 *        } catch {
 *          return new Response("404 - P√°gina no encontrada", { status: 404 });
 *        }
 *      });
 *    }
 *    ```

 * 3. En tu archivo `server.ts`, importa esta funci√≥n:
 *    ```ts
 *    import { iniciarServidor } from "../slightlyLate.ts";
 *    iniciarServidor(3000);
 *    ```

 * 4. Corre el servidor con los mismos permisos que antes:
 *    ```bash
 *    deno run --allow-net --allow-read ejercicio_19/server.ts
 *    ```

 * ‚úÖ Consejo:
 * - En el mundo real, Express (Node.js) o Oak (Deno) encapsulan este tipo de l√≥gica.
 * - Aqu√≠ est√°s simulando ese tipo de abstracci√≥n para entender c√≥mo funcionan estos m√≥dulos internamente.

 * üß™ Bonus:
 * Puedes mejorar tu m√≥dulo para que detecte autom√°ticamente el tipo MIME (`text/html`, `text/css`, etc.)
 * usando extensiones de archivo si quieres expandirlo.

 * Este m√≥dulo sienta las bases para reutilizar tu servidor de forma sencilla a medida que tus proyectos crecen.
 */
