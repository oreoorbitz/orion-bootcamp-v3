<!-- templates/43_product.liquid -->
<div class="max-w-xl mx-auto p-4">
    <h1 class="text-2xl md:text-3xl font-bold mb-2">{{ product.title }}</h1>
    <p class="text-gray-700 mb-1">ID: {{ product.id }}</p>
    <p class="text-gray-700 mb-4">Handle: {{ product.handle }}</p>
    <p class="text-lg font-semibold mb-6">Precio: {{ product.price | money }}</p>

    <form id="add-to-cart-form" class="space-y-4">
      <!-- Cantidad -->
      <label class="block">
        <span class="block text-sm text-gray-700 mb-1">Cantidad</span>
        <input
          type="number"
          id="qty"
          value="1"
          min="1"
          class="border rounded p-2 w-24"
        />
      </label>

      <!-- Propiedades de línea (opcionales) -->
      <div class="p-4 border rounded bg-gray-50 space-y-3">
        <h2 class="font-semibold">Personaliza tu producto</h2>

        <label class="block">
          <span class="block text-sm text-gray-700 mb-1">Color</span>
          <select id="prop-color" class="border rounded p-2 w-full">
            <option value="">Seleccione un color (opcional)</option>
            <option>Rojo</option>
            <option>Azul</option>
            <option>Negro</option>
          </select>
        </label>

        <label class="block">
          <span class="block text-sm text-gray-700 mb-1">Talla</span>
          <select id="prop-talla" class="border rounded p-2 w-full">
            <option value="">Seleccione una talla (opcional)</option>
            <option>S</option>
            <option>M</option>
            <option>L</option>
          </select>
        </label>

        <label class="block">
          <span class="block text-sm text-gray-700 mb-1">Grabado (opcional)</span>
          <input
            id="prop-grabado"
            type="text"
            maxlength="40"
            placeholder="Ej. 'Para Ana'"
            class="border rounded p-2 w-full"
          />
        </label>

        <p class="text-xs text-gray-500">
          Estas opciones se guardarán como <em>line item properties</em> y aparecerán en tu carrito.
        </p>
      </div>

      <button
        id="add-to-cart-btn"
        class="bg-blue-600 hover:bg-blue-700 text-white font-semibold py-2 px-4 rounded shadow w-full md:w-auto"
        type="submit"
      >
        Añadir al carrito
      </button>
    </form>
  </div>

  <script>
    document.getElementById('add-to-cart-form').addEventListener('submit', async (e) => {
      e.preventDefault();

      const qty = Math.max(1, parseInt(document.getElementById('qty').value || '1', 10));

      // Construir objeto de propiedades (solo claves con valor)
      const properties = {};
      const color = (document.getElementById('prop-color').value || '').trim();
      const talla = (document.getElementById('prop-talla').value || '').trim();
      const grabado = (document.getElementById('prop-grabado').value || '').trim();

      if (color) properties['Color'] = color;
      if (talla) properties['Talla'] = talla;
      if (grabado) properties['Grabado'] = grabado;

      const payload = {
        id: {{ product.id }},
        quantity: qty,
        // Solo incluir properties si hay al menos una
        ...(Object.keys(properties).length ? { properties } : {})
      };

      const response = await fetch('/cart/add', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(payload)
      });

      if (response.ok) {
        alert('Producto añadido al carrito');
        // Opcional: redirigir al carrito
        // window.location.href = '/cart';
      } else {
        alert('Hubo un problema al añadir el producto');
      }
    });
  </script>
